<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.8" jmeter="2.13 r1665067">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1316089399000</longProp>
        <longProp name="ThreadGroup.end_time">1316089399000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <intProp name="calcMode">0</intProp>
          <stringProp name="throughput">${__P(queryThroughPut,10)}</stringProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Visualization_1" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;size&quot;: 0,&#xd;
  &quot;aggs&quot;: {&#xd;
    &quot;2&quot;: {&#xd;
      &quot;date_histogram&quot;: {&#xd;
        &quot;field&quot;: &quot;@timestamp&quot;,&#xd;
        &quot;interval&quot;: &quot;10m&quot;,&#xd;
        &quot;time_zone&quot;: &quot;Europe/Berlin&quot;,&#xd;
        &quot;min_doc_count&quot;: 1,&#xd;
        &quot;extended_bounds&quot;: {&#xd;
          &quot;min&quot;: 1420073843880,&#xd;
          &quot;max&quot;: 1420116926662&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  },&#xd;
  &quot;highlight&quot;: {&#xd;
    &quot;pre_tags&quot;: [&#xd;
      &quot;@kibana-highlighted-field@&quot;&#xd;
    ],&#xd;
    &quot;post_tags&quot;: [&#xd;
      &quot;@/kibana-highlighted-field@&quot;&#xd;
    ],&#xd;
    &quot;fields&quot;: {&#xd;
      &quot;*&quot;: {}&#xd;
    },&#xd;
    &quot;require_field_match&quot;: false,&#xd;
    &quot;fragment_size&quot;: 2147483647&#xd;
  },&#xd;
  &quot;query&quot;: {&#xd;
    &quot;filtered&quot;: {&#xd;
      &quot;query&quot;: {&#xd;
        &quot;query_string&quot;: {&#xd;
          &quot;query&quot;: &quot;*&quot;,&#xd;
          &quot;analyze_wildcard&quot;: true&#xd;
        }&#xd;
      },&#xd;
      &quot;filter&quot;: {&#xd;
        &quot;bool&quot;: {&#xd;
          &quot;must&quot;: [&#xd;
            {&#xd;
              &quot;range&quot;: {&#xd;
                &quot;@timestamp&quot;: {&#xd;
                  &quot;gte&quot;: 1420073843880,&#xd;
                  &quot;lte&quot;: 1420116926662,&#xd;
                  &quot;format&quot;: &quot;epoch_millis&quot;&#xd;
                }&#xd;
              }&#xd;
            }&#xd;
          ],&#xd;
          &quot;must_not&quot;: []&#xd;
        }&#xd;
      }&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">client</stringProp>
          <stringProp name="HTTPSampler.port">9200</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/logstash/logs/_search</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
          <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="clusterName" elementType="Argument">
                <stringProp name="Argument.name">clusterName</stringProp>
                <stringProp name="Argument.value">marvel</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="userPass" elementType="Argument">
                <stringProp name="Argument.name">userPass</stringProp>
                <stringProp name="Argument.value">es_admin:password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="elasticsearchCluster" elementType="Argument">
                <stringProp name="Argument.name">elasticsearchCluster</stringProp>
                <stringProp name="Argument.value">marvel:9300</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="indexName" elementType="Argument">
                <stringProp name="Argument.name">indexName</stringProp>
                <stringProp name="Argument.value">jmeter-elasticsearch</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="sampleType" elementType="Argument">
                <stringProp name="Argument.name">sampleType</stringProp>
                <stringProp name="Argument.value">SampleResult</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="dateTimeAppendFormat" elementType="Argument">
                <stringProp name="Argument.name">dateTimeAppendFormat</stringProp>
                <stringProp name="Argument.value">-yyyy-MM-DD</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="normalizedTime" elementType="Argument">
                <stringProp name="Argument.name">normalizedTime</stringProp>
                <stringProp name="Argument.value">2015-01-01 00:00:00.000-00:00</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="runId" elementType="Argument">
                <stringProp name="Argument.name">runId</stringProp>
                <stringProp name="Argument.value">${__UUID()}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="classname">co.elastic.jmeter.elasticsearch.ElasticSearchBackendListenerClient</stringProp>
        </BackendListener>
        <hashTree/>
        <ResultSaver guiclass="ResultSaverGui" testclass="ResultSaver" testname="Save Responses to a file" enabled="false">
          <stringProp name="FileSaver.filename">/load-test/results</stringProp>
          <boolProp name="FileSaver.errorsonly">false</boolProp>
          <boolProp name="FileSaver.skipautonumber">false</boolProp>
          <boolProp name="FileSaver.skipsuffix">false</boolProp>
          <boolProp name="FileSaver.successonly">true</boolProp>
        </ResultSaver>
        <hashTree/>
        <ResultCollector guiclass="SimpleDataWriter" testclass="ResultCollector" testname="Simple Data Writer" enabled="false">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>false</assertions>
              <subresults>false</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <hostname>true</hostname>
              <threadCounts>true</threadCounts>
            </value>
          </objProp>
          <stringProp name="filename">/results.csv</stringProp>
          <boolProp name="ResultCollector.success_only_logging">true</boolProp>
        </ResultCollector>
        <hashTree/>
        <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
          <collectionProp name="AuthManager.auth_list">
            <elementProp name="" elementType="Authorization">
              <stringProp name="Authorization.url">http://client:9200</stringProp>
              <stringProp name="Authorization.username">es_admin</stringProp>
              <stringProp name="Authorization.password">password</stringProp>
              <stringProp name="Authorization.domain"></stringProp>
              <stringProp name="Authorization.realm"></stringProp>
            </elementProp>
          </collectionProp>
        </AuthManager>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
